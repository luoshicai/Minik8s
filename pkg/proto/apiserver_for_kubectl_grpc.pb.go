// grpc server is API Server and client is Kubectl

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.9
// source: proto/apiserver_for_kubectl.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ApiServerKubectlService_SayHello_FullMethodName         = "/apiserver_for_kubectl.ApiServerKubectlService/SayHello"
	ApiServerKubectlService_ApplyPod_FullMethodName         = "/apiserver_for_kubectl.ApiServerKubectlService/ApplyPod"
	ApiServerKubectlService_DeletePod_FullMethodName        = "/apiserver_for_kubectl.ApiServerKubectlService/DeletePod"
	ApiServerKubectlService_GetPod_FullMethodName           = "/apiserver_for_kubectl.ApiServerKubectlService/GetPod"
	ApiServerKubectlService_ApplyDeployment_FullMethodName  = "/apiserver_for_kubectl.ApiServerKubectlService/ApplyDeployment"
	ApiServerKubectlService_GetDeployment_FullMethodName    = "/apiserver_for_kubectl.ApiServerKubectlService/GetDeployment"
	ApiServerKubectlService_DeleteDeployment_FullMethodName = "/apiserver_for_kubectl.ApiServerKubectlService/DeleteDeployment"
	ApiServerKubectlService_ApplyHPA_FullMethodName         = "/apiserver_for_kubectl.ApiServerKubectlService/ApplyHPA"
	ApiServerKubectlService_GetHPA_FullMethodName           = "/apiserver_for_kubectl.ApiServerKubectlService/GetHPA"
	ApiServerKubectlService_UpdateHPA_FullMethodName        = "/apiserver_for_kubectl.ApiServerKubectlService/UpdateHPA"
	ApiServerKubectlService_DeleteHPA_FullMethodName        = "/apiserver_for_kubectl.ApiServerKubectlService/DeleteHPA"
	ApiServerKubectlService_ApplyService_FullMethodName     = "/apiserver_for_kubectl.ApiServerKubectlService/ApplyService"
	ApiServerKubectlService_GetService_FullMethodName       = "/apiserver_for_kubectl.ApiServerKubectlService/GetService"
	ApiServerKubectlService_DeleteService_FullMethodName    = "/apiserver_for_kubectl.ApiServerKubectlService/DeleteService"
	ApiServerKubectlService_GetNode_FullMethodName          = "/apiserver_for_kubectl.ApiServerKubectlService/GetNode"
	ApiServerKubectlService_ApplyDns_FullMethodName         = "/apiserver_for_kubectl.ApiServerKubectlService/ApplyDns"
	ApiServerKubectlService_GetDns_FullMethodName           = "/apiserver_for_kubectl.ApiServerKubectlService/GetDns"
	ApiServerKubectlService_DeleteDns_FullMethodName        = "/apiserver_for_kubectl.ApiServerKubectlService/DeleteDns"
	ApiServerKubectlService_ApplyJob_FullMethodName         = "/apiserver_for_kubectl.ApiServerKubectlService/ApplyJob"
	ApiServerKubectlService_GetJob_FullMethodName           = "/apiserver_for_kubectl.ApiServerKubectlService/GetJob"
	ApiServerKubectlService_ApplyFunction_FullMethodName    = "/apiserver_for_kubectl.ApiServerKubectlService/ApplyFunction"
	ApiServerKubectlService_GetFunction_FullMethodName      = "/apiserver_for_kubectl.ApiServerKubectlService/GetFunction"
	ApiServerKubectlService_DeleteFunction_FullMethodName   = "/apiserver_for_kubectl.ApiServerKubectlService/DeleteFunction"
	ApiServerKubectlService_UpdateFunction_FullMethodName   = "/apiserver_for_kubectl.ApiServerKubectlService/UpdateFunction"
	ApiServerKubectlService_ApplyWorkflow_FullMethodName    = "/apiserver_for_kubectl.ApiServerKubectlService/ApplyWorkflow"
)

// ApiServerKubectlServiceClient is the client API for ApiServerKubectlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ApiServerKubectlServiceClient interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	ApplyPod(ctx context.Context, in *ApplyPodRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	DeletePod(ctx context.Context, in *DeletePodRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetPod(ctx context.Context, in *GetPodRequest, opts ...grpc.CallOption) (*GetPodResponse, error)
	ApplyDeployment(ctx context.Context, in *ApplyDeploymentRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetDeployment(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*GetDeploymentResponse, error)
	DeleteDeployment(ctx context.Context, in *DeleteDeploymentRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	ApplyHPA(ctx context.Context, in *ApplyHorizontalPodAutoscalerRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetHPA(ctx context.Context, in *GetHorizontalPodAutoscalerRequest, opts ...grpc.CallOption) (*GetHorizontalPodAutoscalerResponse, error)
	UpdateHPA(ctx context.Context, in *UpdateHorizontalPodAutoscalerRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	DeleteHPA(ctx context.Context, in *DeleteHorizontalPodAutoscaler, opts ...grpc.CallOption) (*StatusResponse, error)
	ApplyService(ctx context.Context, in *ApplyServiceRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServiceResponse, error)
	DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	ApplyDns(ctx context.Context, in *ApplyDnsRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetDns(ctx context.Context, in *GetDnsRequest, opts ...grpc.CallOption) (*GetDnsResponse, error)
	DeleteDns(ctx context.Context, in *DeleteDnsRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	ApplyJob(ctx context.Context, in *ApplyJobRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error)
	ApplyFunction(ctx context.Context, in *ApplyFunctionRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetFunction(ctx context.Context, in *GetFunctionRequest, opts ...grpc.CallOption) (*GetFunctionResponse, error)
	DeleteFunction(ctx context.Context, in *DeleteFunctionRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	UpdateFunction(ctx context.Context, in *UpdateFunctionRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	ApplyWorkflow(ctx context.Context, in *ApplyWorkflowRequest, opts ...grpc.CallOption) (*StatusResponse, error)
}

type apiServerKubectlServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApiServerKubectlServiceClient(cc grpc.ClientConnInterface) ApiServerKubectlServiceClient {
	return &apiServerKubectlServiceClient{cc}
}

func (c *apiServerKubectlServiceClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_SayHello_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) ApplyPod(ctx context.Context, in *ApplyPodRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_ApplyPod_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) DeletePod(ctx context.Context, in *DeletePodRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_DeletePod_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) GetPod(ctx context.Context, in *GetPodRequest, opts ...grpc.CallOption) (*GetPodResponse, error) {
	out := new(GetPodResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_GetPod_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) ApplyDeployment(ctx context.Context, in *ApplyDeploymentRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_ApplyDeployment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) GetDeployment(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*GetDeploymentResponse, error) {
	out := new(GetDeploymentResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_GetDeployment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) DeleteDeployment(ctx context.Context, in *DeleteDeploymentRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_DeleteDeployment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) ApplyHPA(ctx context.Context, in *ApplyHorizontalPodAutoscalerRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_ApplyHPA_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) GetHPA(ctx context.Context, in *GetHorizontalPodAutoscalerRequest, opts ...grpc.CallOption) (*GetHorizontalPodAutoscalerResponse, error) {
	out := new(GetHorizontalPodAutoscalerResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_GetHPA_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) UpdateHPA(ctx context.Context, in *UpdateHorizontalPodAutoscalerRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_UpdateHPA_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) DeleteHPA(ctx context.Context, in *DeleteHorizontalPodAutoscaler, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_DeleteHPA_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) ApplyService(ctx context.Context, in *ApplyServiceRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_ApplyService_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServiceResponse, error) {
	out := new(GetServiceResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_GetService_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_DeleteService_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_GetNode_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) ApplyDns(ctx context.Context, in *ApplyDnsRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_ApplyDns_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) GetDns(ctx context.Context, in *GetDnsRequest, opts ...grpc.CallOption) (*GetDnsResponse, error) {
	out := new(GetDnsResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_GetDns_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) DeleteDns(ctx context.Context, in *DeleteDnsRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_DeleteDns_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) ApplyJob(ctx context.Context, in *ApplyJobRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_ApplyJob_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error) {
	out := new(GetJobResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_GetJob_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) ApplyFunction(ctx context.Context, in *ApplyFunctionRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_ApplyFunction_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) GetFunction(ctx context.Context, in *GetFunctionRequest, opts ...grpc.CallOption) (*GetFunctionResponse, error) {
	out := new(GetFunctionResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_GetFunction_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) DeleteFunction(ctx context.Context, in *DeleteFunctionRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_DeleteFunction_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) UpdateFunction(ctx context.Context, in *UpdateFunctionRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_UpdateFunction_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServerKubectlServiceClient) ApplyWorkflow(ctx context.Context, in *ApplyWorkflowRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, ApiServerKubectlService_ApplyWorkflow_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServerKubectlServiceServer is the server API for ApiServerKubectlService service.
// All implementations must embed UnimplementedApiServerKubectlServiceServer
// for forward compatibility
type ApiServerKubectlServiceServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloResponse, error)
	ApplyPod(context.Context, *ApplyPodRequest) (*StatusResponse, error)
	DeletePod(context.Context, *DeletePodRequest) (*StatusResponse, error)
	GetPod(context.Context, *GetPodRequest) (*GetPodResponse, error)
	ApplyDeployment(context.Context, *ApplyDeploymentRequest) (*StatusResponse, error)
	GetDeployment(context.Context, *GetDeploymentRequest) (*GetDeploymentResponse, error)
	DeleteDeployment(context.Context, *DeleteDeploymentRequest) (*StatusResponse, error)
	ApplyHPA(context.Context, *ApplyHorizontalPodAutoscalerRequest) (*StatusResponse, error)
	GetHPA(context.Context, *GetHorizontalPodAutoscalerRequest) (*GetHorizontalPodAutoscalerResponse, error)
	UpdateHPA(context.Context, *UpdateHorizontalPodAutoscalerRequest) (*StatusResponse, error)
	DeleteHPA(context.Context, *DeleteHorizontalPodAutoscaler) (*StatusResponse, error)
	ApplyService(context.Context, *ApplyServiceRequest) (*StatusResponse, error)
	GetService(context.Context, *GetServiceRequest) (*GetServiceResponse, error)
	DeleteService(context.Context, *DeleteServiceRequest) (*StatusResponse, error)
	GetNode(context.Context, *GetNodeRequest) (*GetNodeResponse, error)
	ApplyDns(context.Context, *ApplyDnsRequest) (*StatusResponse, error)
	GetDns(context.Context, *GetDnsRequest) (*GetDnsResponse, error)
	DeleteDns(context.Context, *DeleteDnsRequest) (*StatusResponse, error)
	ApplyJob(context.Context, *ApplyJobRequest) (*StatusResponse, error)
	GetJob(context.Context, *GetJobRequest) (*GetJobResponse, error)
	ApplyFunction(context.Context, *ApplyFunctionRequest) (*StatusResponse, error)
	GetFunction(context.Context, *GetFunctionRequest) (*GetFunctionResponse, error)
	DeleteFunction(context.Context, *DeleteFunctionRequest) (*StatusResponse, error)
	UpdateFunction(context.Context, *UpdateFunctionRequest) (*StatusResponse, error)
	ApplyWorkflow(context.Context, *ApplyWorkflowRequest) (*StatusResponse, error)
	mustEmbedUnimplementedApiServerKubectlServiceServer()
}

// UnimplementedApiServerKubectlServiceServer must be embedded to have forward compatible implementations.
type UnimplementedApiServerKubectlServiceServer struct {
}

func (UnimplementedApiServerKubectlServiceServer) SayHello(context.Context, *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) ApplyPod(context.Context, *ApplyPodRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyPod not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) DeletePod(context.Context, *DeletePodRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePod not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) GetPod(context.Context, *GetPodRequest) (*GetPodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPod not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) ApplyDeployment(context.Context, *ApplyDeploymentRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyDeployment not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) GetDeployment(context.Context, *GetDeploymentRequest) (*GetDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeployment not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) DeleteDeployment(context.Context, *DeleteDeploymentRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeployment not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) ApplyHPA(context.Context, *ApplyHorizontalPodAutoscalerRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyHPA not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) GetHPA(context.Context, *GetHorizontalPodAutoscalerRequest) (*GetHorizontalPodAutoscalerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHPA not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) UpdateHPA(context.Context, *UpdateHorizontalPodAutoscalerRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHPA not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) DeleteHPA(context.Context, *DeleteHorizontalPodAutoscaler) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteHPA not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) ApplyService(context.Context, *ApplyServiceRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyService not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) GetService(context.Context, *GetServiceRequest) (*GetServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetService not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) DeleteService(context.Context, *DeleteServiceRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteService not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) GetNode(context.Context, *GetNodeRequest) (*GetNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNode not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) ApplyDns(context.Context, *ApplyDnsRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyDns not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) GetDns(context.Context, *GetDnsRequest) (*GetDnsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDns not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) DeleteDns(context.Context, *DeleteDnsRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDns not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) ApplyJob(context.Context, *ApplyJobRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyJob not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) GetJob(context.Context, *GetJobRequest) (*GetJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJob not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) ApplyFunction(context.Context, *ApplyFunctionRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyFunction not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) GetFunction(context.Context, *GetFunctionRequest) (*GetFunctionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFunction not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) DeleteFunction(context.Context, *DeleteFunctionRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFunction not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) UpdateFunction(context.Context, *UpdateFunctionRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFunction not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) ApplyWorkflow(context.Context, *ApplyWorkflowRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyWorkflow not implemented")
}
func (UnimplementedApiServerKubectlServiceServer) mustEmbedUnimplementedApiServerKubectlServiceServer() {
}

// UnsafeApiServerKubectlServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApiServerKubectlServiceServer will
// result in compilation errors.
type UnsafeApiServerKubectlServiceServer interface {
	mustEmbedUnimplementedApiServerKubectlServiceServer()
}

func RegisterApiServerKubectlServiceServer(s grpc.ServiceRegistrar, srv ApiServerKubectlServiceServer) {
	s.RegisterService(&ApiServerKubectlService_ServiceDesc, srv)
}

func _ApiServerKubectlService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_SayHello_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_ApplyPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyPodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).ApplyPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_ApplyPod_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).ApplyPod(ctx, req.(*ApplyPodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_DeletePod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).DeletePod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_DeletePod_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).DeletePod(ctx, req.(*DeletePodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_GetPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).GetPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_GetPod_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).GetPod(ctx, req.(*GetPodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_ApplyDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).ApplyDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_ApplyDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).ApplyDeployment(ctx, req.(*ApplyDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_GetDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).GetDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_GetDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).GetDeployment(ctx, req.(*GetDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_DeleteDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).DeleteDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_DeleteDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).DeleteDeployment(ctx, req.(*DeleteDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_ApplyHPA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyHorizontalPodAutoscalerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).ApplyHPA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_ApplyHPA_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).ApplyHPA(ctx, req.(*ApplyHorizontalPodAutoscalerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_GetHPA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHorizontalPodAutoscalerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).GetHPA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_GetHPA_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).GetHPA(ctx, req.(*GetHorizontalPodAutoscalerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_UpdateHPA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHorizontalPodAutoscalerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).UpdateHPA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_UpdateHPA_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).UpdateHPA(ctx, req.(*UpdateHorizontalPodAutoscalerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_DeleteHPA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteHorizontalPodAutoscaler)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).DeleteHPA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_DeleteHPA_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).DeleteHPA(ctx, req.(*DeleteHorizontalPodAutoscaler))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_ApplyService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).ApplyService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_ApplyService_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).ApplyService(ctx, req.(*ApplyServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_GetService_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).GetService(ctx, req.(*GetServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_DeleteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).DeleteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_DeleteService_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).DeleteService(ctx, req.(*DeleteServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_GetNode_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_ApplyDns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyDnsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).ApplyDns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_ApplyDns_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).ApplyDns(ctx, req.(*ApplyDnsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_GetDns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDnsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).GetDns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_GetDns_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).GetDns(ctx, req.(*GetDnsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_DeleteDns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDnsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).DeleteDns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_DeleteDns_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).DeleteDns(ctx, req.(*DeleteDnsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_ApplyJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).ApplyJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_ApplyJob_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).ApplyJob(ctx, req.(*ApplyJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_GetJob_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).GetJob(ctx, req.(*GetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_ApplyFunction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyFunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).ApplyFunction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_ApplyFunction_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).ApplyFunction(ctx, req.(*ApplyFunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_GetFunction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).GetFunction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_GetFunction_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).GetFunction(ctx, req.(*GetFunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_DeleteFunction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).DeleteFunction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_DeleteFunction_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).DeleteFunction(ctx, req.(*DeleteFunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_UpdateFunction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFunctionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).UpdateFunction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_UpdateFunction_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).UpdateFunction(ctx, req.(*UpdateFunctionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiServerKubectlService_ApplyWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServerKubectlServiceServer).ApplyWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApiServerKubectlService_ApplyWorkflow_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServerKubectlServiceServer).ApplyWorkflow(ctx, req.(*ApplyWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ApiServerKubectlService_ServiceDesc is the grpc.ServiceDesc for ApiServerKubectlService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ApiServerKubectlService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "apiserver_for_kubectl.ApiServerKubectlService",
	HandlerType: (*ApiServerKubectlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _ApiServerKubectlService_SayHello_Handler,
		},
		{
			MethodName: "ApplyPod",
			Handler:    _ApiServerKubectlService_ApplyPod_Handler,
		},
		{
			MethodName: "DeletePod",
			Handler:    _ApiServerKubectlService_DeletePod_Handler,
		},
		{
			MethodName: "GetPod",
			Handler:    _ApiServerKubectlService_GetPod_Handler,
		},
		{
			MethodName: "ApplyDeployment",
			Handler:    _ApiServerKubectlService_ApplyDeployment_Handler,
		},
		{
			MethodName: "GetDeployment",
			Handler:    _ApiServerKubectlService_GetDeployment_Handler,
		},
		{
			MethodName: "DeleteDeployment",
			Handler:    _ApiServerKubectlService_DeleteDeployment_Handler,
		},
		{
			MethodName: "ApplyHPA",
			Handler:    _ApiServerKubectlService_ApplyHPA_Handler,
		},
		{
			MethodName: "GetHPA",
			Handler:    _ApiServerKubectlService_GetHPA_Handler,
		},
		{
			MethodName: "UpdateHPA",
			Handler:    _ApiServerKubectlService_UpdateHPA_Handler,
		},
		{
			MethodName: "DeleteHPA",
			Handler:    _ApiServerKubectlService_DeleteHPA_Handler,
		},
		{
			MethodName: "ApplyService",
			Handler:    _ApiServerKubectlService_ApplyService_Handler,
		},
		{
			MethodName: "GetService",
			Handler:    _ApiServerKubectlService_GetService_Handler,
		},
		{
			MethodName: "DeleteService",
			Handler:    _ApiServerKubectlService_DeleteService_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _ApiServerKubectlService_GetNode_Handler,
		},
		{
			MethodName: "ApplyDns",
			Handler:    _ApiServerKubectlService_ApplyDns_Handler,
		},
		{
			MethodName: "GetDns",
			Handler:    _ApiServerKubectlService_GetDns_Handler,
		},
		{
			MethodName: "DeleteDns",
			Handler:    _ApiServerKubectlService_DeleteDns_Handler,
		},
		{
			MethodName: "ApplyJob",
			Handler:    _ApiServerKubectlService_ApplyJob_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _ApiServerKubectlService_GetJob_Handler,
		},
		{
			MethodName: "ApplyFunction",
			Handler:    _ApiServerKubectlService_ApplyFunction_Handler,
		},
		{
			MethodName: "GetFunction",
			Handler:    _ApiServerKubectlService_GetFunction_Handler,
		},
		{
			MethodName: "DeleteFunction",
			Handler:    _ApiServerKubectlService_DeleteFunction_Handler,
		},
		{
			MethodName: "UpdateFunction",
			Handler:    _ApiServerKubectlService_UpdateFunction_Handler,
		},
		{
			MethodName: "ApplyWorkflow",
			Handler:    _ApiServerKubectlService_ApplyWorkflow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/apiserver_for_kubectl.proto",
}
